{"version":3,"sources":["componenets/popupCard.jsx","componenets/statisticsMap.jsx","componenets/card.jsx","componenets/chart.jsx","componenets/search.jsx","services/httpServices.js","App.js","serviceWorker.js","index.js"],"names":["Text","styled","h6","Head","h5","Card","div","PopupCard","useContext","popupContext","countryData","countryTodayData","country","deaths","active","critical","cases","recovered","tests","todayDeaths","todayCases","todayRecovered","Badge","span","useEffect","console","log","className","StatisticsMap","position","mapRef","useRef","current","leafletElement","flyTo","duration","Map","ref","center","zoom","TileLayer","zIndex","url","Marker","Popup","title","value","todayValue","color","style","width","height","backgroundColor","border","margin","borderRadius","top","right","transform","lineHeight","fontWeight","fontFamily","fontSize","padding","Chart","query","useState","chartData","setChartData","setContry","getLabels","days_","dates","map","date_","slice","length","fetchHistoricalData","a","axios","get","then","response","data","timeline","labels","Object","keys","datasets","label","values","borderColor","pointBorderColor","pointBackgroundColor","catch","ex","status","alert","defaultProps","displayTitle","displayLegend","legendPosition","options","display","text","fontColor","legend","Search","handleChange","handleSubmit","React","InputValue","setValue","onSubmit","e","preventDefault","type","placeholder","aria-label","onChange","currentTarget","interceptors","use","error","toast","Promise","reject","post","put","delete","createContext","App","setPosition","setCountryData","Data","setData","setCountryTodayData","todayData","setTodayData","searchQuery","setSearchQuery","fetchData","http","fetchCountryData","countryInfo","lat","long","flexDirection","flexWrap","justifyContent","marginTop","alignItems","Provider","overflow","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.08adc361.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { popupContext } from \"../App\";\r\n\r\nconst Text = styled.h6`\r\n  font-size: \"15px\";\r\n  margin-bottom: \"20px\";\r\n`;\r\nconst Head = styled.h5`\r\n  font-weight: \"bold\";\r\n  font-size: \"26px\";\r\n`;\r\nconst Card = styled.div`\r\n  text-align: \"start\";\r\n  height: \"350px\";\r\n  margin-top: \"30px\";\r\n`;\r\n\r\nconst PopupCard = () => {\r\n  //context data\r\n  const { countryData, countryTodayData } = useContext(popupContext);\r\n  const {\r\n    country,\r\n    deaths,\r\n    active,\r\n    critical,\r\n    cases,\r\n    recovered,\r\n    tests,\r\n  } = countryData;\r\n  const { todayDeaths, todayCases, todayRecovered } = countryTodayData;\r\n\r\n  const Badge = styled.span``;\r\n  useEffect(() => {\r\n    console.log(countryData, countryTodayData);\r\n  });\r\n  return (\r\n    <Card>\r\n      <Head>{country}</Head>\r\n      <Text>Tests:{tests}</Text>\r\n      <Text>Active:{active}</Text>\r\n      <Text>\r\n        Cases:{cases}\r\n        <Badge className=\"badge badge-warning ml-2\">+{todayCases}</Badge>\r\n      </Text>\r\n      <Text>Critical:{critical}</Text>\r\n      <Text>\r\n        Recovered:{recovered}\r\n        <Badge className=\"badge badge-success ml-2\">+{todayRecovered}</Badge>\r\n      </Text>\r\n      <Text>\r\n        Deaths:{deaths}\r\n        <Badge className=\"badge badge-danger ml-2\">+{todayDeaths}</Badge>\r\n      </Text>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PopupCard;\r\n","import React, {\r\n  Component,\r\n  useState,\r\n  useContext,\r\n  useRef,\r\n  useEffect,\r\n} from \"react\";\r\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\r\nimport axios from \"axios\";\r\nimport PopupCard from \"./popupCard\";\r\nimport popupContext from \"../App\";\r\n\r\nfunction StatisticsMap({ position }) {\r\n  \r\n //init map\r\n  const mapRef = useRef();\r\n  useEffect(() => {\r\n    const { current } = mapRef;\r\n    const { leafletElement: map } = current;\r\n    map.flyTo(position, 4, { duration: 3 });\r\n  }, []);\r\n  return (\r\n    <Map ref={mapRef} center={position} zoom={4}>\r\n      <TileLayer\r\n        zIndex={-5}\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        //url=\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png\"\r\n      />\r\n      <Marker position={position}>\r\n        <Popup>\r\n          <PopupCard />\r\n        </Popup>\r\n      </Marker>\r\n    </Map>\r\n  );\r\n}\r\n\r\nexport default StatisticsMap;\r\n","import React from \"react\";\r\n\r\nconst Card = ({ title, value, todayValue }) => {\r\n  let color = \"rgba(241, 196, 15,0.5)\";\r\n  if (title === \"Deaths\") color = \"rgba(245, 7, 15,0.5)\";\r\n  if (title === \"Recovered\") color = \"rgba(63, 209, 4,0.5)\";\r\n  \r\n  return (\r\n    <div\r\n      className=\"card\"\r\n      style={{\r\n        width: 300,\r\n        height: 150,\r\n        backgroundColor: \"transparent\",\r\n        color: \"whitesmoke\",\r\n        border: 0,\r\n        margin: \"2rem\",\r\n        borderRadius: \"10px 10px 0 0\",\r\n      }}\r\n    >\r\n      {todayValue ? (\r\n        <span\r\n          style={{\r\n            backgroundColor: color,\r\n            width: 90,\r\n            height: 90,\r\n            position: \"absolute\",\r\n            top: 0,\r\n            right: 0,\r\n            borderRadius: 50,\r\n            transform: \"translate(50%,-50%)\",\r\n            lineHeight: 6,\r\n            fontWeight: \"bold\",\r\n            fontFamily: \"'Baloo Tamma 2', cursive\",\r\n            fontSize: 16,\r\n          }}\r\n        >\r\n          +{todayValue}\r\n        </span>\r\n      ) : null}\r\n      <h1\r\n        style={{\r\n          backgroundColor: \"rgba(0, 114, 255,0.3)\",\r\n          borderRadius: \"10px 10px 0 0\",\r\n          padding: \"5px 0\",\r\n          fontFamily: \"'Baloo Tamma 2', cursive\",\r\n        }}\r\n      >\r\n        {title}\r\n      </h1>\r\n      <h2\r\n        style={{\r\n          lineHeight: \"80px\",\r\n          color: \"GrayText\",\r\n          height: \"100%\",\r\n          backgroundColor: \"rgba(255, 255, 255,0.5)\",\r\n          fontFamily: \"'Montserrat', sans-serif\",\r\n        }}\r\n      >\r\n        {value}\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\n\r\nconst Chart = ({ query }) => {\r\n  const [chartData, setChartData] = useState({});\r\n  const [country, setContry] = useState(\"\");\r\n  const getLabels = (days_) => {\r\n    let dates = days_;\r\n    dates = dates.map((date_) => date_.slice(0, date_.length - 3));\r\n    console.log(dates);\r\n    return dates;\r\n  };\r\n  //fetch global historical data\r\n  const fetchHistoricalData = async (query) => {\r\n    axios\r\n      .get(`https://disease.sh/v3/covid-19/historical/${query}?lastdays=7`)\r\n      .then((response) => {\r\n        const { country, timeline } = response.data;\r\n        const { deaths, cases, recovered } = timeline;\r\n        console.log(\"deaths\", deaths);\r\n        console.log(\"cases\", cases);\r\n        setContry(country);\r\n        setChartData({\r\n          labels: getLabels(Object.keys(deaths)),\r\n          datasets: [\r\n            {\r\n              label: \"Deaths\",\r\n              data: Object.values(deaths),\r\n              borderColor: \"rgba(236, 112, 99, 0.8 )\",\r\n              backgroundColor: \"rgba(236, 112, 99, 0.8 )\",\r\n              pointBorderColor: \"#666\",\r\n              pointBackgroundColor: \"rgba(236, 112, 99, 1)\",\r\n            },\r\n            {\r\n              label: \"Recovered\",\r\n              data: Object.values(recovered),\r\n              borderColor: \"rgba(130, 224, 170, 0.8)\",\r\n              backgroundColor: \"rgba(130, 224, 170, 0.8)\",\r\n              pointBorderColor: \"#666\",\r\n              pointBackgroundColor: \"rgba(130, 224, 170, 1)\",\r\n            },\r\n            {\r\n              label: \"Cases\",\r\n              data: Object.values(cases),\r\n              borderColor: \"rgba(247, 220, 111, 0.8)\",\r\n              backgroundColor: \"rgba(247, 220, 111, 0.8)\",\r\n              pointBorderColor: \"#666\",\r\n              pointBackgroundColor: \"rgba(247, 220, 111, 1)\",\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch((ex) => {\r\n        if (ex.response && ex.response.status === 404)\r\n          alert(\"oops Page Not Found\");\r\n      });\r\n  };\r\n\r\n  const defaultProps = {\r\n    displayTitle: true,\r\n    displayLegend: true,\r\n    legendPosition: \"bottom\",\r\n  };\r\n  useEffect(() => {\r\n    fetchHistoricalData(query);\r\n    console.log(chartData);\r\n  }, [query]);\r\n  const { displayTitle, displayLegend, legendPosition } = defaultProps;\r\n  return (\r\n    <div className=\"chart\">\r\n      <Line\r\n        height={300}\r\n        width={300}\r\n        data={chartData}\r\n        options={{\r\n          title: {\r\n            display: displayTitle,\r\n            text: \"Past 7 days in \" + country,\r\n            fontSize: 25,\r\n            fontColor: \"White\",\r\n            fontFamily: \"'Baloo Tamma 2', cursive\",\r\n          },\r\n          legend: {\r\n            display: displayLegend,\r\n            position: legendPosition,\r\n            labels: {\r\n              fontColor: \"white\",\r\n              fontSize: 18,\r\n              fontFamily: \"'Baloo Tamma 2', cursive\",\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\n\r\nconst Search = ({ value, handleChange, handleSubmit }) => {\r\n  const [InputValue, setValue] = React.useState(\"\");\r\n  return (\r\n    <form\r\n      className=\"form-inline\"\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(InputValue);\r\n      }}\r\n    >\r\n      <input\r\n        type=\"search\"\r\n        className=\"form-control mr-sm-2\"\r\n        placeholder=\"Search\"\r\n        aria-label=\"Search\"\r\n        onChange={(e) => {\r\n          setValue(e.currentTarget.value);\r\n          handleChange(e.currentTarget.value);\r\n        }}\r\n        value={value}\r\n        style={{\r\n          position: \"absolute\",\r\n          top: 15,\r\n          width: 150,\r\n          right: 10,\r\n          zIndex: 10,\r\n        }}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n//axios error interceptor\r\naxios.interceptors.response.use(null, (error) => {\r\n  const ExpectedError =\r\n    error.response && error.response >= 400 && error.response < 500;\r\n  if (!ExpectedError) {\r\n    console.log(\"Logging the error \" + error);\r\n    toast.error(\"An unexpected error occurred\");\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport StatisticsMap from \"./componenets/statisticsMap\";\nimport Card from \"./componenets/card\";\nimport Chart from \"./componenets/chart\";\nimport Search from \"./componenets/search\";\nimport http from \"./services/httpServices\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n//context\nexport const popupContext = React.createContext({});\nfunction App() {\n  //map position\n  const [position, setPosition] = useState([34, -7]);\n  //country total data\n  const [countryData, setCountryData] = useState({\n    country: \"Morocco\",\n    deaths: 0,\n    active: 0,\n    critical: 0,\n    cases: 0,\n    recovered: 0,\n    tests: 0,\n  });\n  //global total data\n  const [Data, setData] = useState({\n    deaths: 0,\n    active: 0,\n    critical: 0,\n    cases: 0,\n    recovered: 0,\n    tests: 0,\n  });\n  //country daily data\n  const [countryTodayData, setCountryTodayData] = useState({\n    todayDeaths: 0,\n    todayCases: 0,\n    todayRecovered: 0,\n  });\n  //global daily data\n  const [todayData, setTodayData] = useState({\n    todayDeaths: 0,\n    todayCases: 0,\n    todayRecovered: 0,\n  });\n  //search query to store controlled element Search value\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  //fetch global data\n  const fetchData = async () => {\n    http\n      .get(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => {\n        const {\n          deaths,\n          active,\n          critical,\n          cases,\n          recovered,\n          tests,\n          todayDeaths,\n          todayCases,\n          todayRecovered,\n        } = response.data;\n        setData({\n          deaths: deaths,\n          active: active,\n          critical: critical,\n          cases: cases,\n          recovered: recovered,\n          tests: tests,\n        });\n        setTodayData({\n          todayDeaths: todayDeaths,\n          todayCases: todayCases,\n          todayRecovered: todayRecovered,\n        });\n      })\n      .catch((ex) => {\n        if (ex.response && ex.response.status === 404)\n          toast.error(\"ooops Page Not Found\");\n      });\n  };\n  //fetch country data\n  const fetchCountryData = (query) => {\n    console.log(query);\n    http\n      .get(\n        `https://disease.sh/v3/covid-19/countries/${query}?strict=true&allowNull=0`\n      )\n      .then((response) => {\n        const { lat, long } = response.data.countryInfo;\n        const {\n          country,\n          deaths,\n          active,\n          critical,\n          cases,\n          recovered,\n          tests,\n          todayDeaths,\n          todayCases,\n          todayRecovered,\n        } = response.data;\n        setCountryData({\n          country: country,\n          deaths: deaths,\n          active: active,\n          critical: critical,\n          cases: cases,\n          recovered: recovered,\n          tests: tests,\n        });\n        setCountryTodayData({\n          todayDeaths: todayDeaths,\n          todayCases: todayCases,\n          todayRecovered: todayRecovered,\n        });\n        setPosition([lat, long]);\n      })\n      .catch((ex) => {\n        if (ex.response && ex.response.status === 404)\n          toast.error(\"oops Try Diffrente Country\");\n      });\n  };\n  //handleSearch\n  const handleChange = (text) => {\n    setSearchQuery(text);\n  };\n  //handle search submit\n  const handleSearchSubmit = (text) => {\n    fetchCountryData(text);\n  };\n  //Fetching needed data on load\n  useEffect(() => {\n    fetchCountryData(countryData.country);\n    fetchData();\n  }, []);\n  const { deaths, active, critical, cases, recovered, tests } = Data;\n  const { todayDeaths, todayCases, todayRecovered } = todayData;\n  return (\n    <div className=\"App\" style={{ padding: \"2rem\" }}>\n      <ToastContainer />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          flexWrap: \"nowrap\",\n          justifyContent: \"space-between\",\n          marginTop: \"4rem\",\n          alignItems: \"center\",\n        }}\n      >\n        <Search\n          value={searchQuery}\n          handleChange={handleChange}\n          handleSubmit={handleSearchSubmit}\n        />\n\n        <div className=\"country-statistics\">\n          <div className=\"container\">\n            <popupContext.Provider value={{ countryData, countryTodayData }}>\n              <StatisticsMap position={position} />\n            </popupContext.Provider>\n          </div>\n          <div className=\"container\">\n            <Chart query={countryData.country} />\n          </div>\n        </div>\n\n        <div\n          style={{\n            width: \"100%\",\n            borderRadius: 10,\n            padding: \"1rem\",\n            margin: \"4rem 0 0\",\n            overflow: \"hidden\",\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n            backgroundColor: \"rgba(255, 255, 255,0.2)\",\n          }}\n        >\n          <Card title=\"Total Tests\" value={tests} />\n          <Card title=\"Total Cases\" value={cases} todayValue={todayCases} />\n          <Card title=\"Deaths\" value={deaths} todayValue={todayDeaths} />\n          <Card\n            title=\"Recovered\"\n            value={recovered}\n            todayValue={todayRecovered}\n          />\n          <Card title=\"Critical\" value={critical} />\n          <Card title=\"Active\" value={active} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}